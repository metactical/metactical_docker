ARG PYTHON_VERSION=3.10
FROM ubuntu:22.04 AS base

# Install Python
RUN apt-get update && apt-get install -y \
  software-properties-common 

RUN add-apt-repository ppa:deadsnakes/ppa \
  && apt-get update && apt-get install -y \
  python3.10 \
  python3.10-dev \
  python3.10-distutils \
  python3.10-venv \
  && rm -rf /var/lib/apt/lists/*

ARG WKHTMLTOPDF_VERSION=0.12.6.1-3
ARG WKHTMLTOPDF_DISTRO=bookworm
ARG NODE_VERSION=18.16.1
ENV NVM_DIR=/home/frappe/.nvm
ENV PATH ${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}

RUN useradd -ms /bin/bash frappe \
  && apt-get update \
  && apt-get install -y \
  git \
  nginx \
  redis-server \
  # MariaDB
  mariadb-client \
  # Postgres
  postgresql-client \
  supervisor \
  # For healthcheck
  wait-for-it \
  # NodeJS
  # && mkdir -p ${NVM_DIR} \
  # && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash \
  # && . ${NVM_DIR}/nvm.sh \
  # && nvm install ${NODE_VERSION} \
  # && nvm use v${NODE_VERSION} \
  # && npm install -g yarn \
  # && nvm alias default v${NODE_VERSION} \
  # && rm -rf ${NVM_DIR}/.cache \
  # && echo 'export NVM_DIR="/home/frappe/.nvm"' >>/home/frappe/.bashrc \
  # && echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm' >>/home/frappe/.bashrc \
  # && echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion' >>/home/frappe/.bashrc \
  # Install wkhtmltopdf with patched qt
  && if [ "$(uname -m)" = "aarch64" ]; then export ARCH=arm64; fi \
  && if [ "$(uname -m)" = "x86_64" ]; then export ARCH=amd64; fi \
  && downloaded_file=wkhtmltox_${WKHTMLTOPDF_VERSION}.${WKHTMLTOPDF_DISTRO}_${ARCH}.deb \
  && curl -sLO https://github.com/wkhtmltopdf/packaging/releases/download/$WKHTMLTOPDF_VERSION/$downloaded_file \
  && apt-get install -y ./$downloaded_file \
  && rm $downloaded_file \
  # Clean up
  && rm -rf /var/lib/apt/lists/* \
  && rm -fr /etc/nginx/sites-enabled/default \
  && pip3 install frappe-bench \
  # Fixes for non-root nginx and logs to stdout
  && sed -i '/user www-data/d' /etc/nginx/nginx.conf \
  && ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log \
  && touch /run/nginx.pid \
  && chown -R frappe:frappe /etc/nginx/conf.d \
  && chown -R frappe:frappe /etc/nginx/nginx.conf \
  && chown -R frappe:frappe /var/log/nginx \
  && chown -R frappe:frappe /var/lib/nginx \
  && chown -R frappe:frappe /run/nginx.pid \
  && chown -R frappe:frappe /etc/supervisor/conf.d \
  && chown -R frappe:frappe /etc/supervisor/supervisord.conf \
  && chown -R frappe:frappe /var/log/supervisor \
  # Add frappe to sudoers and set password
  && echo 'frappe ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \
  && echo 'frappe:yourpassword' | chpasswd


#COPY resources/nginx-template.conf /templates/nginx/frappe.conf.template
#COPY resources/nginx-entrypoint.sh /usr/local/bin/nginx-entrypoint.sh
#RUN chmod +x /usr/local/bin/nginx-entrypoint.sh

FROM base AS builder

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    # For frappe framework
    wget \
    # For psycopg2
    libpq-dev \
    # Other
    libffi-dev \
    liblcms2-dev \
    libldap2-dev \
    libmariadb-dev \
    libsasl2-dev \
    libtiff5-dev \
    libwebp-dev \
    redis-tools \
    rlwrap \
    tk8.6-dev \
    cron \
    # For pandas
    gcc \
    build-essential \
    libbz2-dev \
    coreutils \
    nano \
    && rm -rf /var/lib/apt/lists/*

USER frappe

ARG FRAPPE_BRANCH=version-14
ARG FRAPPE_PATH=https://github.com/metactical/frappe.git
ARG ERPNEXT_REPO=https://github.com/metactical/erpnext.git
ARG ERPNEXT_BRANCH=version-14

# Verify repository URL and branch
RUN git ls-remote --heads ${FRAPPE_PATH} ${FRAPPE_BRANCH} && \
  git ls-remote --heads ${ERPNEXT_REPO} ${ERPNEXT_BRANCH}

RUN bench init \
  --frappe-branch=${FRAPPE_BRANCH} \
  --frappe-path=${FRAPPE_PATH} \
  /home/frappe/frappe-bench && \
  cd /home/frappe/frappe-bench && \
  bench get-app --branch=${ERPNEXT_BRANCH} --resolve-deps erpnext ${ERPNEXT_REPO} && \
  bench get-app --branch version-14 hrms https://github.com/metactical/hrms.git 

# Set working directory
WORKDIR /home/frappe/frappe-bench

# Install Metactical
RUN bench get-app --branch version-14 metactical https://github.com/metactical/metactical.git
RUN cd /home/frappe/frappe-bench/apps/metactical && \
  git config remote.upstream.fetch "+refs/heads/:refs/remotes/upstream/"

RUN echo "{}" > sites/common_site_config.json

FROM base as erpnext

USER frappe

COPY --from=builder --chown=frappe:frappe /home/frappe/frappe-bench /home/frappe/frappe-bench

WORKDIR /home/frappe/frappe-bench

VOLUME [ \
  "/home/frappe/frappe-bench/sites", \
  "/home/frappe/frappe-bench/sites/assets", \
  "/home/frappe/frappe-bench/logs", \
  "/home/frappe/frappe-bench/apps/metactical" \
]

# CMD [ \
#   "/home/frappe/frappe-bench/env/bin/gunicorn", \
#   "--chdir=/home/frappe/frappe-bench/sites", \
#   "--bind=0.0.0.0:8000", \
#   "--threads=4", \
#   "--workers=2", \
#   "--worker-class=gthread", \
#   "--worker-tmp-dir=/dev/shm", \
#   "--timeout=120", \
#   "--preload", \
#   "frappe.app:application" \
# ]

RUN node --version \
    && npm --version \
    && yarn --version \
    && bench --help

RUN bash -c "node --version" \
    && bash -c "npm --version" \
    && bash -c "yarn --version" \
    && bash -c "bench --help"